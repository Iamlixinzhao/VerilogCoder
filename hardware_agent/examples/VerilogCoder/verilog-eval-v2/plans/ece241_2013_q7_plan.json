[{"id": "1", "content": "```\nDefine the module named TopModule with input ports clk, j, k, and output port Q.\n\nRetrieved Related Information:\nclk: Clock input signal for synchronization (Type:Signal)\nj: Input signal J for the JK flip-flop (Type:Signal)\nk: Input signal K for the JK flip-flop (Type:Signal)\nQ: Output signal of the JK flip-flop (Type:Signal)\nJ | K | Q (Type:StateTransition)\n0 | 0 | Qold (Type:StateTransition)\n1 | 1 | ~Qold (Type:StateTransition)\n```\n", "source": "I would like you to implement a module named TopModule with the following interface. All input and output ports are one bit unless otherwise specified.\n\n - input  clk\n - input  j\n - input  k\n - output Q", "parent_tasks": []}, {"id": "2", "content": "```\nImplement the sequential logic for the JK flip-flop. Use the positive edge of the clock to trigger the logic. Implement the truth table for the JK flip-flop: when J=0 and K=0, Q retains its old value (Qold); when J=0 and K=1, Q is reset to 0; when J=1 and K=0, Q is set to 1; when J=1 and K=1, Q toggles its value.\n\nRetrieved Related Information:\n- j: Input signal J for the JK flip-flop\n- k: Input signal K for the JK flip-flop\n- Q: Output signal of the JK flip-flop\n- J | K | Q (State Transition)\n- 0 | 0 | Qold (State Transition)\n- 1 | 1 | ~Qold (State Transition)\n```\n", "source": "The module should implement a JK flip-flop with the following truth table. Note: Qold is the output of the flip-flop before the positive clock edge.\n\n  J | K | Q\n  0 | 0 | Qold\n  0 | 1 | 0\n  1 | 0 | 1\n  1 | 1 | ~Qold", "parent_tasks": ["1"]}]